{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Folder/Fullstack/client/src/Components/Home1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Note from \"./Note\";\nimport NoteEditor from \"./NoteEditor\";\nimport \"./Home1.scss\";\nimport Context from \"../ReactContext /Context\";\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Axios = require('axios').default;\n\nconst element = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faCoffee\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 17\n}, this);\n\nfunction Home1() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [noteEditorOpen, setNoteEditorOpen] = useState(false);\n  const [editNoteData, setEditNoteData] = useState(null);\n  const {\n    client\n  } = useContext(Context);\n  useEffect(() => {\n    if (!client) setNotes([]);else getNote();\n  }, [client]);\n\n  async function getNote() {\n    const notePath = await Axios.get(\"http://localhost:4000/routers/\");\n    setNotes(notePath.data);\n  }\n\n  function editNote(noteData) {\n    setEditNoteData(noteData);\n    setNoteEditorOpen(true);\n  }\n\n  function renderNote() {\n    let sortedNote = [...notes];\n    sortedNote = sortedNote.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return sortedNote.map((note, i) => {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        getNote: getNote,\n        editNote: editNote\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [!noteEditorOpen && client && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => setNoteEditorOpen(true),\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), noteEditorOpen && /*#__PURE__*/_jsxDEV(NoteEditor, {\n      setNoteEditorOpen: setNoteEditorOpen,\n      getNote: getNote,\n      editNoteData: editNoteData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), !noteEditorOpen && client && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteBox\",\n      children: renderNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }, this), !client && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome to Sticky Notes   \", element]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home1, \"aaYmks+T7kQb0dK7+vq/NbsSwww=\");\n\n_c = Home1;\nexport default Home1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home1\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Folder/Fullstack/client/src/Components/Home1.js"],"names":["React","useState","useEffect","useContext","Note","NoteEditor","Context","ReactDOM","FontAwesomeIcon","faCoffee","Axios","require","default","element","Home1","notes","setNotes","noteEditorOpen","setNoteEditorOpen","editNoteData","setEditNoteData","client","getNote","notePath","get","data","editNote","noteData","renderNote","sortedNote","sort","a","b","Date","createdAt","map","note","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,MAAMC,OAAO,gBAAG,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,QAAhB;;AAIA,SAASK,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAM;AAACoB,IAAAA;AAAD,MAAWlB,UAAU,CAACG,OAAD,CAA3B;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACmB,MAAJ,EAAYL,QAAQ,CAAC,EAAD,CAAR,CAAZ,KACKM,OAAO;AACf,GAHQ,EAGN,CAACD,MAAD,CAHM,CAAT;;AAKA,iBAAeC,OAAf,GAAwB;AACpB,UAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,gCAAV,CAAvB;AACAR,IAAAA,QAAQ,CAACO,QAAQ,CAACE,IAAV,CAAR;AACH;;AAED,WAASC,QAAT,CAAkBC,QAAlB,EAA2B;AACvBP,IAAAA,eAAe,CAACO,QAAD,CAAf;AACAT,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAEH;;AAED,WAASU,UAAT,GAAqB;AACjB,QAAIC,UAAU,GAAG,CAAC,GAAGd,KAAJ,CAAjB;AACAc,IAAAA,UAAU,GAAGA,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAS;AAClC,aAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,SAAX,IAAwB,IAAID,IAAJ,CAASF,CAAC,CAACG,SAAX,CAA/B;AACH,KAFY,CAAb;AAGA,WAAOL,UAAU,CAACM,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC/B,0BAAO,QAAC,IAAD;AAEP,QAAA,IAAI,EAAED,IAFC;AAGP,QAAA,OAAO,EAAEd,OAHF;AAIP,QAAA,QAAQ,EAAGI;AAJJ,SACFW,CADE;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH,KATM,CAAP;AAYH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACC,CAACpB,cAAD,IAAmBI,MAAnB,iBACG;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAMH,iBAAiB,CAAC,IAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGCD,cAAc,iBACf,QAAC,UAAD;AACA,MAAA,iBAAiB,EAAGC,iBADpB;AAEA,MAAA,OAAO,EAAGI,OAFV;AAGA,MAAA,YAAY,EAAIH;AAHhB;AAAA;AAAA;AAAA;AAAA,YAJA,EAUC,CAACF,cAAD,IAAmBI,MAAnB,iBAA8B;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BO,UAAU;AAApC;AAAA;AAAA;AAAA;AAAA,YAV/B,EAWE,CAACP,MAAD,iBAAY;AAAA,6BAAK;AAAA,iDAA+BR,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAXd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAjEQC,K;;KAAAA,K;AAmET,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport Note from \"./Note\";\nimport NoteEditor from \"./NoteEditor\";\nimport \"./Home1.scss\";\nimport Context from \"../ReactContext /Context\";\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\nconst Axios = require('axios').default;\nconst element = <FontAwesomeIcon icon={faCoffee} />\n\n\n\nfunction Home1() {\n    const [notes, setNotes] = useState([]);\n    const [noteEditorOpen, setNoteEditorOpen] = useState(false);\n    const [editNoteData, setEditNoteData] = useState(null);\n\n    const {client} = useContext(Context);\n\n\n\n    useEffect(() => {\n        if(!client) setNotes([]);\n        else getNote();\n    }, [client]);\n\n    async function getNote(){\n        const notePath = await Axios.get(\"http://localhost:4000/routers/\");\n        setNotes(notePath.data)\n    }\n\n    function editNote(noteData){\n        setEditNoteData(noteData);\n        setNoteEditorOpen(true);\n\n    }\n\n    function renderNote(){\n        let sortedNote = [...notes];\n        sortedNote = sortedNote.sort((a, b) =>{\n            return new Date(b.createdAt) - new Date(a.createdAt);\n        })  \n        return sortedNote.map((note, i) => {\n            return <Note \n            key={i}\n            note={note} \n            getNote={getNote}\n            editNote ={editNote}\n\n            />\n\n        })\n        \n        \n    }\n\n\n    return (\n        <div className=\"Home\"> \n        {!noteEditorOpen && client &&(\n            <button className=\"add-btn\" onClick={() => setNoteEditorOpen(true)}>Add Note</button>)}\n        {noteEditorOpen && ( \n        <NoteEditor \n        setNoteEditorOpen ={setNoteEditorOpen} \n        getNote ={getNote}\n        editNoteData = {editNoteData}    \n        />\n            )}\n        {!noteEditorOpen && client && (<div className=\"noteBox\">{renderNote()}</div>)} \n        { !client && (<div><h2>Welcome to Sticky Notes   {element}</h2></div>)} \n\n\n\n\n\n        </div>\n    );\n}\n\nexport default Home1; "]},"metadata":{},"sourceType":"module"}