{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Folder/Fullstack/client/src/Components/NoteEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Axios = require('axios').default; // import { Axios } from \"axios\";\n\n\nexport default function NoteEditor(_ref) {\n  _s();\n\n  let {\n    getNote,\n    setNoteEditorOpen,\n    editNoteData\n  } = _ref;\n  const [noteTitle, setNoteTitle] = useState([\"\"]);\n  const [noteDescription, setNoteDescription] = useState([\"\"]);\n  const [noteCode, setNoteCode] = useState([\"\"]);\n  useEffect(() => {\n    if (editNoteData) {\n      setNoteTitle(editNoteData.title ? editNoteData.title : \" \");\n      setNoteDescription(editNoteData.name ? editNoteData.name : \" \");\n      setNoteCode(editNoteData.code ? editNoteData.code : \" \");\n    }\n  }, [editNoteData]);\n\n  async function savingNote(event) {\n    event.preventDefault();\n    const noteData = {\n      title: noteTitle ? noteTitle : undefined,\n      name: noteDescription ? noteDescription : undefined,\n      code: noteCode ? noteCode : undefined\n    };\n    if (!editNoteData) await Axios.post(\"http://localhost:4000/routers/\", noteData);else await Axios.put(`http://localhost:4000/routers/${editNoteData._id}`, noteData);\n    getNote();\n    cancelNote();\n  }\n\n  function cancelNote() {\n    setNoteEditorOpen(false);\n    setNoteTitle(\"\");\n    setNoteDescription(\"\");\n    setNoteCode(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-editor\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: savingNote,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"editor-title\",\n        children: \"Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"editor-title\",\n        type: \"text\",\n        value: noteTitle,\n        onChange: event => setNoteTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"editor-description\",\n        children: \"Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"editor-description\",\n        type: \"text\",\n        value: noteDescription,\n        onChange: event => setNoteDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"editor-code\",\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"editor-code\",\n        value: noteCode,\n        onChange: event => setNoteCode(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelNote,\n        children: \"Cancel Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteEditor, \"qPmHitgTkc/0xfqasMcAA8v1Y80=\");\n\n_c = NoteEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Folder/Fullstack/client/src/Components/NoteEditor.js"],"names":["React","useEffect","useState","Axios","require","default","NoteEditor","getNote","setNoteEditorOpen","editNoteData","noteTitle","setNoteTitle","noteDescription","setNoteDescription","noteCode","setNoteCode","title","name","code","savingNote","event","preventDefault","noteData","undefined","post","put","_id","cancelNote","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nconst Axios = require('axios').default;\n// import { Axios } from \"axios\";\n\n\nexport default function NoteEditor({getNote, setNoteEditorOpen, editNoteData}) {\n    const [noteTitle, setNoteTitle] = useState([\"\"]);\n    const [noteDescription, setNoteDescription] = useState([\"\"]);\n    const [noteCode, setNoteCode] = useState([\"\"]);\n\n    useEffect(() => {\n        if (editNoteData) {\n            setNoteTitle(editNoteData.title ? editNoteData.title : \" \");\n            setNoteDescription(editNoteData.name ? editNoteData.name : \" \");\n            setNoteCode(editNoteData.code ? editNoteData.code : \" \");\n        }\n\n    }, [editNoteData]);\n\n\n    async function savingNote(event) {\n        event.preventDefault();\n        const noteData = {\n            title: noteTitle ? noteTitle : undefined,\n            name: noteDescription ? noteDescription : undefined,\n            code: noteCode ? noteCode : undefined\n        };\n        if (!editNoteData)\n            await Axios.post(\"http://localhost:4000/routers/\", noteData);\n        else \n            await Axios.put(`http://localhost:4000/routers/${editNoteData._id}`, noteData);\n        getNote();\n        cancelNote();\n\n    }\n\n    function cancelNote() {\n        setNoteEditorOpen(false);\n        setNoteTitle(\"\");\n        setNoteDescription(\"\");\n        setNoteCode(\"\");\n    }\n\n\n\n    return (\n    <div className= \"note-editor\">\n        <form onSubmit={savingNote}>\n            <label htmlFor=\"editor-title\">Title </label>\n            <input id=\"editor-title\"  type=\"text\" value = {noteTitle} onChange={(event) => setNoteTitle(event.target.value)}/>\n\n            <label htmlFor=\"editor-description\">Description </label>\n            <input id=\"editor-description\"  type=\"text\" value = {noteDescription} onChange={(event) => setNoteDescription(event.target.value)}/>\n\n            <label htmlFor=\"editor-code\">Code</label>\n            <textarea id=\"editor-code\" value ={noteCode} onChange={(event) => setNoteCode(event.target.value)}/>\n\n            <button type =\"submit\">Save Note</button>\n            <button type =\"button\" onClick={cancelNote}>Cancel Note</button>\n        </form>\n\n    </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}